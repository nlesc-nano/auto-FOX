# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
    push:
        branches:
            - master
            - Auto-FOX-0.8
    pull_request:

jobs:
    build:
        name: ${{ matrix.os }} (py ${{ matrix.version }}${{ matrix.special }})
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                version: [3.7, 3.8, 3.9]
                special: ['']
                include:
                    -   os: ubuntu-latest
                        special: '; pre-release'
                        version: 3.9
                    -   os: ubuntu-latest
                        special: '; minimum version'
                        version: 3.7
                exclude:
                    -   os: windows-latest
                        special: ''
                        version: 3.9

        steps:
            -   name: Cancel Previous Runs
                uses: styfle/cancel-workflow-action@0.6.0
                with:
                    access_token: ${{ github.token }}

            -   uses: actions/checkout@v2

            -   name: Set up Conda
                if: matrix.os != 'windows-latest'
                uses: s-weigand/setup-conda@v1
                with:
                    update-conda: true
                    conda-channels: anaconda

            -   name: Set up Conda (windows-latest)
                if: matrix.os == 'windows-latest'
                uses: s-weigand/setup-conda@v1
                with:
                    update-conda: true
                    python-version: ${{ matrix.version }}
                    conda-channels: anaconda

            -   name: Install CP2K
                if: matrix.os == 'ubuntu-latest'
                run: sudo apt install cp2k

            -   name: Info CP2K
                if: matrix.os == 'ubuntu-latest'
                run: cp2k.popt --version

            -   name: Install dependencies
                if: matrix.special == '' && matrix.os != 'windows-latest'
                run: |
                    conda create -n test -c conda-forge python=${{ matrix.version }} rdkit
                    source $CONDA/bin/activate test
                    pip install -e .[test]

            -   name: Install dependencies (windows-latest)
                if: matrix.special == '' && matrix.os == 'windows-latest'
                run: |
                    conda install -c conda-forge rdkit
                    pip install -e .[test]

            -   name: Install dependencies (minimum version)
                if: matrix.special == '; minimum version'
                run: |
                    conda create -n test -c conda-forge python=${{ matrix.version }} pyyaml=5.1 rdkit=2018.09 numpy=1.15 h5py=2.10 pandas=0.23 scipy=1.2.0 matplotlib
                    source $CONDA/bin/activate test
                    pip install Nano-Utils==1.2.1 schema==0.7.1 AssertionLib==2.2 noodles==0.3.3 sphinx==2.4
                    pip install -e .[test]

            -   name: Install dependencies (pre-release)
                if: matrix.special == '; pre-release'
                run: |
                    conda create -n test -c conda-forge python=${{ matrix.version }} rdkit
                    source $CONDA/bin/activate test
                    pip install --pre -e .[test] --upgrade --force-reinstall

            -   name: Info Conda
                run: conda info

            -   name: Info installed packages
                if: matrix.os != 'windows-latest'
                run: conda list -n test

            -   name: Info installed packages (windows-latest)
                if: matrix.os == 'windows-latest'
                run: conda list

            -   name: Check code style
                if: matrix.os != 'windows-latest'
                run: |
                    source $CONDA/bin/activate test
                    flake8 FOX tests
                    pydocstyle FOX tests

            -   name: Check code style (windows-latest)
                if: matrix.os == 'windows-latest'
                run: |
                    flake8 FOX tests
                    pydocstyle FOX tests

            -   name: Run tests
                if: matrix.os != 'windows-latest'
                run: |
                    source $CONDA/bin/activate test
                    export CP2K_DATA_DIR="/usr/share/cp2k"
                    pytest -m "not slow"

            -   name: Run tests (windows-latest)
                if: matrix.os == 'windows-latest'
                run: pytest -m "not slow"

            -   name: Run codecov
                uses: codecov/codecov-action@v1
                with:
                    file: ./coverage.xml
                    name: codecov-umbrella
